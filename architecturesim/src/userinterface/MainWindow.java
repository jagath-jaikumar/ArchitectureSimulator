/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import java.awt.BorderLayout;
import java.util.Scanner;
import src.*;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jjaikumar
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    private int stepCount = 1;
    private boolean cacheSet = false;
    private boolean pipeSet = false;
    private boolean pipeVal;
    private boolean cacheVal;
    private String programFile = "";
    
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CacheButtons = new javax.swing.ButtonGroup();
        PipelineButtons = new javax.swing.ButtonGroup();
        MemoryFormatButtons = new javax.swing.ButtonGroup();
        ProjectNameLabel = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        simulationSettingsPanel = new javax.swing.JPanel();
        PipelineEnabledBox = new javax.swing.JPanel();
        pipelineEnabledButton = new javax.swing.JRadioButton();
        pipelineDisabledButton = new javax.swing.JRadioButton();
        pipelineButtonsLabel = new javax.swing.JLabel();
        CacheEnabledBox = new javax.swing.JPanel();
        cacheEnabledButton = new javax.swing.JRadioButton();
        cacheDisabledButton = new javax.swing.JRadioButton();
        cacheButtonsLabel = new javax.swing.JLabel();
        memoryPanel = new javax.swing.JPanel();
        clockLabel1 = new javax.swing.JLabel();
        clockTextBox1 = new javax.swing.JTextField();
        clockLabel2 = new javax.swing.JLabel();
        clockTextBox2 = new javax.swing.JTextField();
        clockTextBox3 = new javax.swing.JTextField();
        clockLabel3 = new javax.swing.JLabel();
        clockTextBox4 = new javax.swing.JTextField();
        clockLabel4 = new javax.swing.JLabel();
        clockTextBox5 = new javax.swing.JTextField();
        clockLabel5 = new javax.swing.JLabel();
        clockTextBox6 = new javax.swing.JTextField();
        clockLabel6 = new javax.swing.JLabel();
        clockTextBox7 = new javax.swing.JTextField();
        clockLabel7 = new javax.swing.JLabel();
        clockTextBox8 = new javax.swing.JTextField();
        clockLabel8 = new javax.swing.JLabel();
        clockTextBox9 = new javax.swing.JTextField();
        clockLabel9 = new javax.swing.JLabel();
        clockLabel11 = new javax.swing.JLabel();
        InstructionEnglish = new javax.swing.JTextField();
        memoryPanel1 = new javax.swing.JPanel();
        CacheLevelNameDropDown1 = new javax.swing.JComboBox<>();
        CacheLevelLabel1 = new javax.swing.JLabel();
        AddressPageLabel1 = new javax.swing.JLabel();
        AddressRangeDropDown1 = new javax.swing.JComboBox<>();
        memoryScrollPane1 = new javax.swing.JScrollPane();
        MemoryViewer1 = new javax.swing.JTable();
        StepJumperDrop = new javax.swing.JComboBox<>();
        stepButton = new javax.swing.JButton();
        stepButton1 = new javax.swing.JButton();
        FormatMemoryLabel = new javax.swing.JLabel();
        hexbutton = new javax.swing.JRadioButton();
        binaryButton = new javax.swing.JRadioButton();
        decimalButton = new javax.swing.JRadioButton();
        RunButtonLabel = new javax.swing.JButton();
        clockTextBox = new javax.swing.JTextField();
        clockLabel = new javax.swing.JLabel();
        LoadProgram = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ProjectNameLabel.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        ProjectNameLabel.setText("CS 535 Architecture Simulator");

        simulationSettingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulator Settings"));

        PipelineButtons.add(pipelineEnabledButton);
        pipelineEnabledButton.setText("Enabled");
        pipelineEnabledButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipelineEnabledButtonActionPerformed(evt);
            }
        });

        PipelineButtons.add(pipelineDisabledButton);
        pipelineDisabledButton.setText("Disabled");
        pipelineDisabledButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipelineDisabledButtonActionPerformed(evt);
            }
        });

        pipelineButtonsLabel.setText("Pipeline Settings");

        javax.swing.GroupLayout PipelineEnabledBoxLayout = new javax.swing.GroupLayout(PipelineEnabledBox);
        PipelineEnabledBox.setLayout(PipelineEnabledBoxLayout);
        PipelineEnabledBoxLayout.setHorizontalGroup(
            PipelineEnabledBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PipelineEnabledBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pipelineEnabledButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pipelineDisabledButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PipelineEnabledBoxLayout.createSequentialGroup()
                .addComponent(pipelineButtonsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PipelineEnabledBoxLayout.setVerticalGroup(
            PipelineEnabledBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PipelineEnabledBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pipelineButtonsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PipelineEnabledBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pipelineDisabledButton)
                    .addComponent(pipelineEnabledButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CacheButtons.add(cacheEnabledButton);
        cacheEnabledButton.setText("Enabled");
        cacheEnabledButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cacheEnabledButtonActionPerformed(evt);
            }
        });

        CacheButtons.add(cacheDisabledButton);
        cacheDisabledButton.setText("Disabled");
        cacheDisabledButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cacheDisabledButtonActionPerformed(evt);
            }
        });

        cacheButtonsLabel.setText("Cache Settings");

        javax.swing.GroupLayout CacheEnabledBoxLayout = new javax.swing.GroupLayout(CacheEnabledBox);
        CacheEnabledBox.setLayout(CacheEnabledBoxLayout);
        CacheEnabledBoxLayout.setHorizontalGroup(
            CacheEnabledBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CacheEnabledBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cacheEnabledButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cacheDisabledButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(CacheEnabledBoxLayout.createSequentialGroup()
                .addComponent(cacheButtonsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        CacheEnabledBoxLayout.setVerticalGroup(
            CacheEnabledBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CacheEnabledBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cacheButtonsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CacheEnabledBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cacheEnabledButton)
                    .addComponent(cacheDisabledButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout simulationSettingsPanelLayout = new javax.swing.GroupLayout(simulationSettingsPanel);
        simulationSettingsPanel.setLayout(simulationSettingsPanelLayout);
        simulationSettingsPanelLayout.setHorizontalGroup(
            simulationSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simulationSettingsPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(CacheEnabledBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PipelineEnabledBox, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        simulationSettingsPanelLayout.setVerticalGroup(
            simulationSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CacheEnabledBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PipelineEnabledBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        memoryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("CPU Viewer"));
        memoryPanel.setName(""); // NOI18N

        clockLabel1.setText("Instruction:");

        clockTextBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBox1ActionPerformed(evt);
            }
        });

        clockLabel2.setText("R0: ");

        clockTextBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBox2ActionPerformed(evt);
            }
        });

        clockTextBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBox3ActionPerformed(evt);
            }
        });

        clockLabel3.setText("R1: ");

        clockTextBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBox4ActionPerformed(evt);
            }
        });

        clockLabel4.setText("R2: ");

        clockTextBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBox5ActionPerformed(evt);
            }
        });

        clockLabel5.setText("R3: ");

        clockTextBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBox6ActionPerformed(evt);
            }
        });

        clockLabel6.setText("R4: ");

        clockTextBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBox7ActionPerformed(evt);
            }
        });

        clockLabel7.setText("R5: ");

        clockTextBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBox8ActionPerformed(evt);
            }
        });

        clockLabel8.setText("R6: ");

        clockTextBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBox9ActionPerformed(evt);
            }
        });

        clockLabel9.setText("R7: ");

        clockLabel11.setText("Instruction:");

        InstructionEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InstructionEnglishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout memoryPanelLayout = new javax.swing.GroupLayout(memoryPanel);
        memoryPanel.setLayout(memoryPanelLayout);
        memoryPanelLayout.setHorizontalGroup(
            memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(memoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(memoryPanelLayout.createSequentialGroup()
                        .addComponent(clockLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clockTextBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(memoryPanelLayout.createSequentialGroup()
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(memoryPanelLayout.createSequentialGroup()
                                .addComponent(clockLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clockTextBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(memoryPanelLayout.createSequentialGroup()
                                .addComponent(clockLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clockTextBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(memoryPanelLayout.createSequentialGroup()
                                .addComponent(clockLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clockTextBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(memoryPanelLayout.createSequentialGroup()
                                .addComponent(clockLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clockTextBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(46, 46, 46)
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(memoryPanelLayout.createSequentialGroup()
                                .addComponent(clockLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clockTextBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(memoryPanelLayout.createSequentialGroup()
                                .addComponent(clockLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clockTextBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(memoryPanelLayout.createSequentialGroup()
                                .addComponent(clockLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clockTextBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(memoryPanelLayout.createSequentialGroup()
                                .addComponent(clockLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clockTextBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(memoryPanelLayout.createSequentialGroup()
                        .addComponent(clockLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(InstructionEnglish, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        memoryPanelLayout.setVerticalGroup(
            memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, memoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InstructionEnglish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clockLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clockTextBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clockLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(memoryPanelLayout.createSequentialGroup()
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockTextBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockTextBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockTextBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockTextBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockLabel5)))
                    .addGroup(memoryPanelLayout.createSequentialGroup()
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockTextBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockTextBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockTextBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(memoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockTextBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockLabel9))))
                .addGap(63, 63, 63))
        );

        memoryPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Memory Viewer"));
        memoryPanel1.setName(""); // NOI18N

        CacheLevelNameDropDown1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        CacheLevelNameDropDown1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CacheLevelNameDropDown1ActionPerformed(evt);
            }
        });

        CacheLevelLabel1.setText("Cache Level");

        AddressPageLabel1.setText("Address Range");

        AddressRangeDropDown1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {" "}));
        AddressRangeDropDown1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressRangeDropDown1ActionPerformed(evt);
            }
        });

        MemoryViewer1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Address", "Memory"
            }
        ));
        memoryScrollPane1.setViewportView(MemoryViewer1);

        javax.swing.GroupLayout memoryPanel1Layout = new javax.swing.GroupLayout(memoryPanel1);
        memoryPanel1.setLayout(memoryPanel1Layout);
        memoryPanel1Layout.setHorizontalGroup(
            memoryPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(memoryPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(memoryPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(memoryScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(memoryPanel1Layout.createSequentialGroup()
                        .addComponent(CacheLevelLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CacheLevelNameDropDown1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AddressPageLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddressRangeDropDown1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        memoryPanel1Layout.setVerticalGroup(
            memoryPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(memoryPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(memoryPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CacheLevelLabel1)
                    .addComponent(CacheLevelNameDropDown1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddressPageLabel1)
                    .addComponent(AddressRangeDropDown1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(memoryScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(175, 175, 175))
        );

        StepJumperDrop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "10", "20" }));
        StepJumperDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StepJumperDropActionPerformed(evt);
            }
        });

        stepButton.setText("Step");
        stepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepButtonActionPerformed(evt);
            }
        });

        stepButton1.setLabel("Finish");
        stepButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepButton1ActionPerformed(evt);
            }
        });

        FormatMemoryLabel.setText("Format");

        MemoryFormatButtons.add(hexbutton);
        hexbutton.setText("Hex");
        hexbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexbuttonActionPerformed(evt);
            }
        });

        MemoryFormatButtons.add(binaryButton);
        binaryButton.setText("Binary");
        binaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binaryButtonActionPerformed(evt);
            }
        });

        MemoryFormatButtons.add(decimalButton);
        decimalButton.setText("Decimal");
        decimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addComponent(simulationSettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StepJumperDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(stepButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(stepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FormatMemoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hexbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(binaryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(decimalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addComponent(memoryPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(memoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(StepJumperDrop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FormatMemoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(leftPanelLayout.createSequentialGroup()
                                .addComponent(stepButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stepButton1))
                            .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(hexbutton)
                                .addComponent(binaryButton)
                                .addComponent(decimalButton))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                        .addComponent(simulationSettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(memoryPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(197, 197, 197))
        );

        RunButtonLabel.setText("Run");
        RunButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RunButton(evt);
            }
        });
        RunButtonLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunButtonLabelActionPerformed(evt);
            }
        });

        clockTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockTextBoxActionPerformed(evt);
            }
        });

        clockLabel.setText("Clock Cycles");

        LoadProgram.setText("Load Program");
        LoadProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadProgramActionPerformed(evt);
            }
        });

        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(ProjectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RunButtonLabel)
                .addGap(26, 26, 26)
                .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clockTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(ResetButton)
                .addGap(18, 18, 18)
                .addComponent(LoadProgram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(229, 229, 229))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ProjectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RunButtonLabel)
                        .addComponent(clockTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(clockLabel)
                        .addComponent(LoadProgram)
                        .addComponent(ResetButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RunButtonLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunButtonLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RunButtonLabelActionPerformed

    private void RunButton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RunButton
        if (cacheSet && pipeSet) {
            CPUManager c = CPUManager.getCPUManager();
            c.isFinished = false;
            c.memory = Memory.getMemory();
            c.register = Register.getRegisters();
            c.pipeline = Pipeline.getPipeline();
            GshareBranchPredictor gshareBP = GshareBranchPredictor.getGshareBP();
            gshareBP.resetGsharePredictorTable();
            c.setClockCycles(0);
            c.register.clearRegisterFile();
            Pipeline p = Pipeline.getPipeline();
            p.reset();
            Memory m = Memory.getMemory();
            m.reset();
            Memory.resetMemoryCycleCount();
            Memory.setCacheEnabled(cacheVal);
            Pipeline.setPipelineEnabled(pipeVal);
            c.readIn(programFile);
            drawTable();
            clockTextBox.setText(Integer.toString(CPUManager.getClockCycles()));
            Register register = Register.getRegisters();
            clockTextBox1.setText(p.getLastInstruction());
            InstructionEnglish.setText(p.getEnglishInstruction());
            clockTextBox2.setText(Integer.toString(register.getRegisterValue(0)));
            clockTextBox3.setText(Integer.toString(register.getRegisterValue(1)));
            clockTextBox4.setText(Integer.toString(register.getRegisterValue(2)));
            clockTextBox5.setText(Integer.toString(register.getRegisterValue(3)));
            clockTextBox6.setText(Integer.toString(register.getRegisterValue(4)));
            clockTextBox7.setText(Integer.toString(register.getRegisterValue(5)));
            clockTextBox8.setText(Integer.toString(register.getRegisterValue(6)));
            clockTextBox9.setText(Integer.toString(register.getRegisterValue(7)));
            drawTable();
        } 
        else {
            clockTextBox1.setText("Cache and Pipeline settings not initialized");
        }
        
    }//GEN-LAST:event_RunButton

    private void clockTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_clockTextBoxActionPerformed

    private void drawTable() {
        Object[][] memoryArraySegment;
        Memory memory = Memory.getMemory();
        int memoryPage = 0;
        String s = (String) AddressRangeDropDown1.getSelectedItem();
        Pattern p = Pattern.compile("\\d+");
        Matcher m = p.matcher(s);
        while(m.find()) {
            memoryPage = Integer.parseInt(m.group());
        }
        
        String [] columnNames = {"Address", "Instruction"};
        if (null != (String) CacheLevelNameDropDown1.getSelectedItem()) switch ((String) CacheLevelNameDropDown1.getSelectedItem()) {
            case "DRAM":
                memoryArraySegment = dm.getMemoryPage("DRAM", memory.DRAM.getMemArray(), memory.DRAM.getTagArray(), memory.DRAM.getHistoryArray(), memoryPage, dm.getFormat());
                MemoryViewer1.setModel(new javax.swing.table.DefaultTableModel(
                    memoryArraySegment,
                    columnNames
                )
                {public boolean isCellEditable(int row, int column){return false;}}
            );  break;
            case "L2 Cache":
                columnNames[0] = "Line";
                memoryArraySegment = dm.getMemoryPage("L2Cache", memory.L2Cache.getMemArray(), memory.L2Cache.getTagArray(), memory.L2Cache.getHistoryArray(), memoryPage, dm.getFormat());
                MemoryViewer1.setModel(new javax.swing.table.DefaultTableModel(
                    memoryArraySegment,
                    columnNames
                )
                {public boolean isCellEditable(int row, int column){return false;}}
            );  break;
            case "L1 Cache":
                columnNames[0] = "Line";
                memoryArraySegment = dm.getMemoryPage("L1Cache", Memory.L1Cache.getMemArray(), Memory.L1Cache.getTagArray(), Memory.L1Cache.getHistoryArray(), memoryPage, dm.getFormat());
                MemoryViewer1.setModel(new javax.swing.table.DefaultTableModel(
                    memoryArraySegment,
                    columnNames
                )
                {public boolean isCellEditable(int row, int column){return false;}}
            );  break;
            default:
                break;
            }
    }
    
    
    private void stepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepButtonActionPerformed
        CPUManager d = CPUManager.getCPUManager();
        Pipeline p = Pipeline.getPipeline();
        for (int i = 0; i < stepCount; i++){
            if (!d.isFinished) {
                // d.forLoopStepper();
                d.Stepper();
                drawTable();
                clockTextBox.setText(Integer.toString(CPUManager.getClockCycles()));
                Register register = Register.getRegisters();
                clockTextBox1.setText(p.getLastInstruction());
                InstructionEnglish.setText(p.getEnglishInstruction());
                clockTextBox2.setText(Integer.toString(register.getRegisterValue(0)));
                clockTextBox3.setText(Integer.toString(register.getRegisterValue(1)));
                clockTextBox4.setText(Integer.toString(register.getRegisterValue(2)));
                clockTextBox5.setText(Integer.toString(register.getRegisterValue(3)));
                clockTextBox6.setText(Integer.toString(register.getRegisterValue(4)));
                clockTextBox7.setText(Integer.toString(register.getRegisterValue(5)));
                clockTextBox8.setText(Integer.toString(register.getRegisterValue(6)));
                clockTextBox9.setText(Integer.toString(register.getRegisterValue(7)));
                int pc = register.getPC();
                // PCBox.setText(Integer.toString(pc));
            }
            else {
                break;
            } 
        }  
    }//GEN-LAST:event_stepButtonActionPerformed

    private void cacheEnabledButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cacheEnabledButtonActionPerformed
        Memory.setCacheEnabled(true);
        cacheVal = true;
        CacheLevelNameDropDown1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "L1 Cache", "L2 Cache", "DRAM" }));
        drawTable();
        cacheSet = true;
    }//GEN-LAST:event_cacheEnabledButtonActionPerformed

    private void cacheDisabledButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cacheDisabledButtonActionPerformed
        Memory.setCacheEnabled(false);
        cacheVal = false;
        CacheLevelNameDropDown1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DRAM" }));
        drawTable();
        cacheSet = true;
    }//GEN-LAST:event_cacheDisabledButtonActionPerformed

    private void pipelineEnabledButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipelineEnabledButtonActionPerformed
        Pipeline.setPipelineEnabled(true);
        pipeSet = true;
        pipeVal = true;
    }//GEN-LAST:event_pipelineEnabledButtonActionPerformed

    private void pipelineDisabledButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipelineDisabledButtonActionPerformed
        Pipeline.setPipelineEnabled(false);
        pipeSet = true;
        pipeVal = false;
    }//GEN-LAST:event_pipelineDisabledButtonActionPerformed

    private void stepButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepButton1ActionPerformed
        // TODO add your handling code here:
        CPUManager d = CPUManager.getCPUManager();
        while (!d.isFinished) {
          d.Stepper();
        }
        Pipeline p = Pipeline.getPipeline();
        drawTable();
        clockTextBox.setText(Integer.toString(CPUManager.getClockCycles()));
        Register register = Register.getRegisters();
        clockTextBox1.setText(p.getLastInstruction());
        InstructionEnglish.setText(p.getEnglishInstruction());
        clockTextBox2.setText(Integer.toString(register.getRegisterValue(0)));
        clockTextBox3.setText(Integer.toString(register.getRegisterValue(1)));
        clockTextBox4.setText(Integer.toString(register.getRegisterValue(2)));
        clockTextBox5.setText(Integer.toString(register.getRegisterValue(3)));
        clockTextBox6.setText(Integer.toString(register.getRegisterValue(4)));
        clockTextBox7.setText(Integer.toString(register.getRegisterValue(5)));
        clockTextBox8.setText(Integer.toString(register.getRegisterValue(6)));
        clockTextBox9.setText(Integer.toString(register.getRegisterValue(7)));
        drawTable();
    }//GEN-LAST:event_stepButton1ActionPerformed

    private void CacheLevelNameDropDown1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CacheLevelNameDropDown1ActionPerformed
        // TODO add your handling code here:
         if (Memory.getCacheEnabled()) {
            if (null != (String) CacheLevelNameDropDown1.getSelectedItem()) switch ((String) CacheLevelNameDropDown1.getSelectedItem()) {
                case "DRAM":
                AddressRangeDropDown1.setModel(new javax.swing.DefaultComboBoxModel<>(dm.getMemoryPageLabelsForMemoryType("DRAM")));
                break;
            case "L2 Cache":
                AddressRangeDropDown1.setModel(new javax.swing.DefaultComboBoxModel<>(dm.getMemoryPageLabelsForMemoryType("L2Cache")));
                break;
            case "L1 Cache":
                AddressRangeDropDown1.setModel(new javax.swing.DefaultComboBoxModel<>(dm.getMemoryPageLabelsForMemoryType("L1Cache")));
                break;
            default:
                break;
            }
        }
        else {
            if (null != (String) CacheLevelNameDropDown1.getSelectedItem()) switch ((String) CacheLevelNameDropDown1.getSelectedItem()) {
                case "DRAM":
                AddressRangeDropDown1.setModel(new javax.swing.DefaultComboBoxModel<>(dm.getMemoryPageLabelsForMemoryType("DRAM")));
                break;
            }
        }
    }//GEN-LAST:event_CacheLevelNameDropDown1ActionPerformed

    private void AddressRangeDropDown1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressRangeDropDown1ActionPerformed
        // TODO add your handling code here:
        drawTable();
    }//GEN-LAST:event_AddressRangeDropDown1ActionPerformed

    private void clockTextBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockTextBox1ActionPerformed

    private void clockTextBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockTextBox2ActionPerformed

    private void clockTextBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockTextBox3ActionPerformed

    private void clockTextBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockTextBox4ActionPerformed

    private void clockTextBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockTextBox5ActionPerformed

    private void clockTextBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockTextBox6ActionPerformed

    private void clockTextBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockTextBox7ActionPerformed

    private void clockTextBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBox8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockTextBox8ActionPerformed

    private void clockTextBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockTextBox9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockTextBox9ActionPerformed

    private void StepJumperDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StepJumperDropActionPerformed
        // TODO add your handling code here:
        if (null != (String) StepJumperDrop.getSelectedItem()) switch ((String) StepJumperDrop.getSelectedItem()) {
                case "1":
                stepCount = 1;
                break;
            case "10":
                stepCount = 10;
                break;
            case "20":
                stepCount = 20;
                break;
            default:
                break;
            }
        System.out.println(stepCount);
    }//GEN-LAST:event_StepJumperDropActionPerformed

    private void LoadProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadProgramActionPerformed
        // TODO add your handling code here:
        final JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode( JFileChooser.FILES_AND_DIRECTORIES );
        int returnVal = chooser.showOpenDialog( this );

        if( returnVal == JFileChooser.APPROVE_OPTION ) {  
            programFile = ( chooser.getSelectedFile().toString());
            System.out.println(programFile);
        }
        if (programFile.equals("")){
            clockTextBox1.setText("Default Program Selected");
        } else {     
            String[] filePath = programFile.split("\\/"); 
            clockTextBox1.setText(filePath[filePath.length-1]);
            InstructionEnglish.setText(filePath[filePath.length-1]);
        }
    }//GEN-LAST:event_LoadProgramActionPerformed

    private void InstructionEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InstructionEnglishActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InstructionEnglishActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
        CPUManager c = CPUManager.getCPUManager();
        c.isFinished = false;
        c.memory = Memory.getMemory();
        c.register = Register.getRegisters();
        c.pipeline = Pipeline.getPipeline();
        c.setClockCycles(0);
        c.register.clearRegisterFile();
        GshareBranchPredictor gshareBP = GshareBranchPredictor.getGshareBP();
        gshareBP.resetGsharePredictorTable();
        Pipeline p = Pipeline.getPipeline();
        p.reset();
        Memory m = Memory.getMemory();
        m.reset();
        Memory.resetMemoryCycleCount();
        Memory.setCacheEnabled(cacheVal);
        Pipeline.setPipelineEnabled(pipeVal);
        drawTable();
        clockTextBox.setText(Integer.toString(CPUManager.getClockCycles()));
        Register register = Register.getRegisters();
        clockTextBox1.setText(p.getLastInstruction());
        InstructionEnglish.setText(p.getEnglishInstruction());
        clockTextBox2.setText(Integer.toString(register.getRegisterValue(0)));
        clockTextBox3.setText(Integer.toString(register.getRegisterValue(1)));
        clockTextBox4.setText(Integer.toString(register.getRegisterValue(2)));
        clockTextBox5.setText(Integer.toString(register.getRegisterValue(3)));
        clockTextBox6.setText(Integer.toString(register.getRegisterValue(4)));
        clockTextBox7.setText(Integer.toString(register.getRegisterValue(5)));
        clockTextBox8.setText(Integer.toString(register.getRegisterValue(6)));
        clockTextBox9.setText(Integer.toString(register.getRegisterValue(7)));
        drawTable();
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void hexbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexbuttonActionPerformed
        dm.setFormat("Hex");
        drawTable();
    }//GEN-LAST:event_hexbuttonActionPerformed

    private void binaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binaryButtonActionPerformed
        dm.setFormat("Binary");
        drawTable();
    }//GEN-LAST:event_binaryButtonActionPerformed

    private void decimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalButtonActionPerformed
        dm.setFormat("Decimal");
        drawTable();
    }//GEN-LAST:event_decimalButtonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
               
            }
        });
    }

    //CPU cpu = new CPU();
    DisplayMemory dm = new DisplayMemory();
    // cpu.MemorySet.L1Cache.getMemArray();
    // cpu.MemorySet.L2Cache.getMemArray();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressPageLabel1;
    private javax.swing.JComboBox<String> AddressRangeDropDown1;
    private javax.swing.ButtonGroup CacheButtons;
    private javax.swing.JPanel CacheEnabledBox;
    private javax.swing.JLabel CacheLevelLabel1;
    private javax.swing.JComboBox<String> CacheLevelNameDropDown1;
    private javax.swing.JLabel FormatMemoryLabel;
    private javax.swing.JTextField InstructionEnglish;
    private javax.swing.JButton LoadProgram;
    private javax.swing.ButtonGroup MemoryFormatButtons;
    private javax.swing.JTable MemoryViewer1;
    private javax.swing.ButtonGroup PipelineButtons;
    private javax.swing.JPanel PipelineEnabledBox;
    private javax.swing.JLabel ProjectNameLabel;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton RunButtonLabel;
    private javax.swing.JComboBox<String> StepJumperDrop;
    private javax.swing.JRadioButton binaryButton;
    private javax.swing.JLabel cacheButtonsLabel;
    private javax.swing.JRadioButton cacheDisabledButton;
    private javax.swing.JRadioButton cacheEnabledButton;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JLabel clockLabel1;
    private javax.swing.JLabel clockLabel11;
    private javax.swing.JLabel clockLabel2;
    private javax.swing.JLabel clockLabel3;
    private javax.swing.JLabel clockLabel4;
    private javax.swing.JLabel clockLabel5;
    private javax.swing.JLabel clockLabel6;
    private javax.swing.JLabel clockLabel7;
    private javax.swing.JLabel clockLabel8;
    private javax.swing.JLabel clockLabel9;
    private javax.swing.JTextField clockTextBox;
    private javax.swing.JTextField clockTextBox1;
    private javax.swing.JTextField clockTextBox2;
    private javax.swing.JTextField clockTextBox3;
    private javax.swing.JTextField clockTextBox4;
    private javax.swing.JTextField clockTextBox5;
    private javax.swing.JTextField clockTextBox6;
    private javax.swing.JTextField clockTextBox7;
    private javax.swing.JTextField clockTextBox8;
    private javax.swing.JTextField clockTextBox9;
    private javax.swing.JRadioButton decimalButton;
    private javax.swing.JRadioButton hexbutton;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel memoryPanel;
    private javax.swing.JPanel memoryPanel1;
    private javax.swing.JScrollPane memoryScrollPane1;
    private javax.swing.JLabel pipelineButtonsLabel;
    private javax.swing.JRadioButton pipelineDisabledButton;
    private javax.swing.JRadioButton pipelineEnabledButton;
    private javax.swing.JPanel simulationSettingsPanel;
    private javax.swing.JButton stepButton;
    private javax.swing.JButton stepButton1;
    // End of variables declaration//GEN-END:variables



     

}
